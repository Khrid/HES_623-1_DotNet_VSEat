@model IEnumerable<DTO.OrderDish>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "DisplayCart";
    var total = 0;

    // Gestion des différents petits messages à afficher
    if (@Context.Session.GetInt32("deletedItem").GetValueOrDefault() == 1)
    {
        Context.Session.Remove("deletedItem");
        <br />
        <div class="alert alert-success" id="success-alert">
            <button type="button" class="close" data-dismiss="alert">x</button>
            Plat supprimé avec succès &#128546;
        </div>
        <script>
            $("#success-alert").fadeTo(5000, 500).slideUp(500, function () {
                $("#success-alert").slideUp(500);
            });
        </script>
    }

    if (@Context.Session.GetString("orderError") != null)
    {
        if (@Context.Session.GetString("orderError") != "")
        {
            <br />
            <div class="alert alert-danger" id="success-error">
                <button type="button" class="close" data-dismiss="alert">x</button>
                @Context.Session.GetString("orderError") &#128517;
            </div>
            Context.Session.Remove("orderError");
        }
    }
}

<h2>Mon panier</h2>

@if (Model != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>
                    Plat
                </th>
                <th>
                    Quantité
                </th>
                <th>
                    Prix (unité)
                </th>
                <th>
                    Prix (total)
                </th>
                <th>
                    Restaurant
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.dish.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dish.price).- CHF
                    </td>
                    <td>
                        @{
                            var price = item.quantity * item.dish.price;
                            total += price;
                            @price;
                        }.- CHF
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dish.restaurant.merchant_name)
                    </td>
                    <td>
                        @Html.ActionLink("Supprimer", "DeleteItem", new { id = item.id })
                    </td>
                </tr>
            }
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <th>@total.- CHF</th>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
    @using (Html.BeginForm("Confirm", "Orders"))
    {
        <span>
            <h4>Heure de livraison: </h4>
            <select name="livraisonHeures">
                @for (int i = 11; i <= 22; i++)
                {
                    if (i > DateTime.Now.Hour + 1)
                    {
                        <option value="@i"> @i </option>
                    }
                }
            </select> :
            <select name="livraisonMinutes">
                <option value="00"> 00 </option>
                <option value="15"> 15 </option>
                <option value="30"> 30 </option>
                <option value="45"> 45 </option>
            </select>
        </span>
        <hr />
        <input type="submit" value="Passer commande" />
    }
}
else
{
    <div class="alert alert-info" id="success-info">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <strong>Le panier est vide &#128528;
    </div>
}